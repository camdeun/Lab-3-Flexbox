body {
    font-family: sans-serif;
    font-size: 16px;
}

a {
    text-decoration: none;
    color: purple;
}

.background-1 {
    background: #68b0ab;
}

.background-2 {
    background: #8fc0a9;
}

.background-3 {
    background: #c8d5b9;
}

.background-4 {
    background: #faf3dd;
}

.m-20 {
    margin: 20px;
}

.h-80 {
    height: 80px;
}

.h-400 {
    height: 400px;
}

.w-80 {
    width: 80px;
}

/* Add your answers here, do not modify the above CSS */
 
/* 2.1 Add a CSS rule for the flex-container class and set it to use a flexbox display model */

.flex-container {
    display: flex;

    /* 6.1 Add a flex-direction property to the flex-container class and observe the behavior */
    flex-direction: column;
    flex-direction: row;

}

/* 2.2 Add rules for the flex-items 1-4 classes and set flex to them accordingly */

.flex-item-1 {
    flex: 1;
}

.flex-item-2 {
    flex: 2;
}

.flex-item-3 {
    flex: 3;
}

.flex-item-4 {
    flex: 4;
}

/* Add CSS rule for the flex-center class and set values for justify content */

.flex-center {
    /* 3.2 Try out different values for both of the above CSS properties. Center item */
    justify-content: center;
    align-items: center;
}

/* 4.1 Add CSS rule for the flex-space-between class and experiment with different */
.flex-space-between {

Justify-content: space-evenly;
justify-content: center;

/*  4.2 Set appropriate value for justify-content to push the elements to the left and right sides with left over space */

justify-content: space-between;

} 

/* 5.1 Add rules for the flex-basis-item-50 and flex-wrap classes so that the container has flex wrap and flex items have flex basis set to 50% */

.flex-wrap {
    flex-wrap: wrap;

    /* 5.2 Observe what happens when changing the value for the flex-wrap to wrap-reverse */
    flex-wrap: wrap-reverse;

}

.flex-basis-item-50 {
    flex-basis: 50%;


/* 5.3 Choose a new value for flex-basis that makes all 4 flex items fit on one line */
 flex-basis: 25%;
}
 /* 7.1 Add CSS for the flex-menu class and its children */
 .flex-menu {
    list-style: none;
    margin: 0;
    padding: 0;
 

/* 7.2 Use the justify-content to align the menu items to the right */
    justify-content: flex-end;

/* 7.3 Use the justify-content property to align the menu items to the center row */
    justify-content: center;

 }

 /* 7.4 Use the order property to move the FAQ menu item to last */
 .flex-menu .fourth-item {
    order: 2;

 }

 .flex-menu li {
    padding: 1em;
    margin: 0 1px;

/* 7.5 Use the flex-row property to divide the total space evenly between each menu item */
    flex-grow: 1;
    text-align: center;


 }
